version: "3.8"

services:
  mysqldb:
    image: mysql:8.0.27
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3307:3306"
    volumes:
      - "./scripts/schema.sql:/docker-entrypoint-initdb.d/1.sql"
      - "./scripts/data.sql:/docker-entrypoint-initdb.d/2.sql"
      - "./scripts/mycustom.cnf:/etc/mysql/conf.d/custom.cnf"
  redis:
    image: "redis:alpine"
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD} #see .env file for environment variable ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
  app-backend:
    depends_on:
      - mysqldb
      - redis
    container_name: app-backend
    build:
      dockerfile: app-backend.Dockerfile
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - "5005:5005"
      - "3000:3000"
    environment:
      SPRING_APPLICATION_JSON: '{
            "spring.datasource.url"  : "jdbc:mysql://mysqldb:3306/${MYSQL_DATABASE}?useSSL=false&allowPublicKeyRetrieval=true",
            "spring.datasource.username" : "${MYSQL_USER}",
            "spring.datasource.password" : "${MYSQL_ROOT_PASSWORD}",
            "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
            "spring.datasource.driver-class-name" : "com.mysql.cj.jdbc.Driver",
            "spring.jpa.hibernate.ddl-auto" : "update"
          }'
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true
  app-frontend:
    depends_on:
      - app-backend
    container_name: app-frontend
    build:
      dockerfile: app-frontend.Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./frontend/src:/app/src
